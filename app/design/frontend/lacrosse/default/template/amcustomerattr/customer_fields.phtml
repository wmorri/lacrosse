<?php
/**
* @author Amasty Team
* @copyright Copyright (c) 2008-2012 Amasty (http://www.amasty.com)
* @package Amasty_Customerattr
*/ 

/* @var $this Amasty_Customerattr_Block_Customer_Fields */
$relations = $this->getElementsRelation();

/*
 * Get form elements to be rendered
 */
$formElements = $this->getFormElements();

$jsCode = Mage::getModel('amcustomerattr/validation')->getJS();
?>

<?php foreach ($formElements as $element): ?>
	<li class="fields">
		<div class="input-box">
			<?php echo $element->toHtml(); ?>
		</div>
	</li>
<?php endforeach; ?>
<!-- CUSTOM IMAGE AT THE RIGHT: <div style="float: right;"><img src="PATH HERE" /></div>-->
<div style="clear: both;"></div>

<?php if (!Mage::registry('amcustomerattr_client_side')):?>
    <style>
        #amcustomerattr .required {
	        color: #EB340A;
        }

        .amcustomerattr .required {
	        color: #EB340A;
        }

        #amcustomerattr .hidden {
	        display: none;
        }

        .amcustomerattr .hidden {
	        display: none;
        }
    </style>
<script type="text/javascript">

<?php echo $jsCode; ?>

Validation.addAllThese([
    ['validate-tendigits', 'Please use 10 digit numbers only in this field. Please avoid spaces or other characters such as dots or commas.', function(v) {
        return Validation.get('IsEmpty').test(v) ||  /^(\d){10}$/.test(v);
    }],
    
    ['validate-aaa-0000', 'Please use the value in the following format: AAA-0000', function(v) {
        return Validation.get('IsEmpty').test(v) ||  /^([A-Za-z]){3}-(\d){4}$/.test(v);
    }],

    ['validate-checkboxgroup-required', 'Please select an option.', function(v, elm) {
        id = elm.id.substr(0, elm.id.search('___'));
        checkboxGroupChecked = false;
        $$('input[id^=' + id + ']').each(function(checkbox){
            if (checkbox.checked)
            {
                checkboxGroupChecked = true;
            }
        });
        return checkboxGroupChecked;
    }],
]);

/* Relations table */
var amcustomerattr_relations = '<?php echo Mage::helper('core')->jsonEncode($relations->toArray());?>'.evalJSON();
var indexed_elements = [];

/*
 * Hide element and its label
 */
function amcustomerattr_hide_element(id) 
{
	if ($(id)) {
		$(id).parentNode.hide();
	}
}

/*
 * Show element and its label
 */
function amcustomerattr_show_element(id) 
{
	if ($(id)) {
        $(id).parentNode.show();
	}
}

/*
 * Manage dependencies.
 * Hide or show dependent attribute
 */
function amcustomerattr_manage_dep(element)
{
    var elementId = element.id;
	
	if (element.id.indexOf('___') > 0) {
		elementId = element.id.substr(0, element.id.search('___')); 
	}
	
	if (element.readAttribute('rel')) {
		elementId = element.readAttribute('rel');
	}
	
    // Find dependents elements
	var dep = amcustomerattr_find_elements(elementId);

    // Iterate throw elements and show required elements
	dep.each(function(el) {
		if ($(el.code)) {
            // Checkboxes and radio
			if (element.checked == false) {
				amcustomerattr_hide_element(el.code);
			} else if (element.checked) {
			    if (element.getValue().indexOf(el.value) >= 0) {
					amcustomerattr_show_element(el.code);
					indexed_elements.push(el.code);
				} else if (indexed_elements.indexOf(el.code) < 0) {
					amcustomerattr_hide_element(el.code);
				}
			} else {
                // Multiselect and select
				if (element.getValue().indexOf(el.value) >= 0) {
					amcustomerattr_show_element(el.code);
                    indexed_elements.push(el.code);
				} else if (indexed_elements.indexOf(el.code) < 0) {
                    amcustomerattr_hide_element(el.code);
				}
			}
			
		} 
	});
	indexed_elements = [];
}

/*
 * Listen elements
 */
function amcustomerattr_listen_element(id) {
	if ($(id)) {
		$(id).observe('change', function(event) {
			var element = Event.element(event);
			amcustomerattr_manage_dep(element);
		});
	}
}

/*
 * Get dependents element for elementId
 */
function amcustomerattr_find_elements(elementId)
{
	var elements = [];
	amcustomerattr_relations.items.each(function(item) {
		if (item.parent_code == elementId) {
			var el = {
				'code' : item.dependent_code,
				'value' : item.option_id
			};
			elements.push(el);
		}
	});
	return elements;
}

var shownElements = [];
<?php 
/*
 * Hide dependent elements
 * Listen for changes
 */
foreach($relations as $relation) { ?>
    var parent = $('<?php echo $relation->getParentCode() ?>');		
	if (parent) {
        if (parent.value == '<?php echo $relation->getOptionId()?>') {
            amcustomerattr_show_element('<?php echo $relation->getDependentCode() ?>');
            shownElements.push('<?php echo $relation->getDependentCode() ?>');
        }
	} 
		
    var parent = $('<?php echo $relation->getParentCode() ?>___<?php echo $relation->getOptionId()?>');		
    if (parent) {
        if (parent.value == '<?php echo $relation->getOptionId()?>' && parent.readAttribute('checked') == 'checked') {
            amcustomerattr_show_element('<?php echo $relation->getDependentCode() ?>');
            shownElements.push('<?php echo $relation->getDependentCode() ?>');
        }
    }
		
    if (shownElements.indexOf('<?php echo $relation->getDependentCode() ?>') < 0) {
        amcustomerattr_hide_element('<?php echo $relation->getDependentCode() ?>');
	}
	
    amcustomerattr_listen_element('<?php echo $relation->getParentCode() ?>___<?php echo $relation->getOptionId()?>');
	amcustomerattr_listen_element('<?php echo $relation->getParentCode() ?>');
<?php
} 
?> 
</script>
<?php
Mage::register('amcustomerattr_client_side', 'displayed'); 
endif; // End Script output?>