<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * Product list template
 *
 * @see Mage_Catalog_Block_Product_List
 */
?>


<aside class="right-page">

<?php
    $_productCollection=$this->getLoadedProductCollection();
    $_helper = $this->helper('catalog/output');
	$listHelper = Mage::helper('colorswatchproductlist');
?>
<?php
	$products = $_productCollection->getColumnValues('entity_id');
	Mage::getSingleton('core/session')->setCurrentCategoryProducts($products);
?>

<?php if(!$_productCollection->count()): ?>

<p class="note-msg"><?php echo $this->__('There are no products matching the selection.') ?></p>
<?php else: ?>

<?php echo $this->getToolbarHtml() ?>
 <div class="products-list">  
    <?php // List mode ?>
    <?php if($this->getMode()!='grid'): ?>

    <?php else: ?>


    <?php // Grid Mode ?>

    <?php $listHelper->setZoomType(2);?>
    <?php $productListConfig = $listHelper->productListConfig();?>

    <?php $_collectionSize = $_productCollection->count() ?>
    <?php $_columnCount = $this->getColumnCount(); ?>
    <ul class="products-grid product_listing">
    <?php $i=0; foreach ($_productCollection as $_product): ?>       
			<?php $_product = Mage::getModel('catalog/product')->load($_product->getId()); ?>
            <li class="item<?php if(($i-1)%$_columnCount==0): ?> first<?php elseif($i%$_columnCount==0): ?> last<?php endif; ?> item-<?php echo $_product->getId()?>" onclick="" >
				<a href="<?php echo $_product->getProductUrl() ?>" style="position: absolute; width: 252px; height: 481px; z-index: 2;"></a>
			<div class="pro-one1">
             	<div class="img-product">

	            <?php if ($productListConfig['use_zoom']) : ?>
	            <a id="image-zoom-<?php echo $_product->getId();?>" href="<?php echo $_product->getProductUrl() ?>" rel="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->resize($productListConfig['upscale_image_width'],$productListConfig['upscale_image_height']);?>" class="product-image">
				   	<img id="image-<?php echo $_product->getId();?>" src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->resize($productListConfig['list_image_width'],$productListConfig['list_image_height']); ?>"  alt="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" />
	            </a>
	            <?php else : ?>
	           	<a style="overflow:hidden;display:block;width:<?php echo $productListConfig['list_image_width'];?>px;height:<?php echo $productListConfig['list_image_height'];?>px;position:relative;" href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" class="product-image">
	            	<img id="image-<?php echo $_product->getId();?>" src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->resize($productListConfig['list_image_width'],$productListConfig['list_image_height']); ?>"  alt="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" />
	            </a>

	            <?php endif; ?>
				
				</div>
				<?php
					/* Quick View Pro */
					$quickview_list_button = $this->getChild('quickview_list_button');
					$quickview_list_button->assign('_product', $_product);
					echo $quickview_list_button->_toHtml();
					/******************/
				?>
				
             	<!--<div class="img-product">
					<a href="<?php //echo $_product->getProductUrl() ?>" title="<?php //echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" class="product-image-new"><img src="<?php //echo $this->helper('catalog/image')->init($_product, 'small_image')->resize(200); ?>" width="200" height="200" alt="<?php //echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" /></a>
				</div>-->
				<?php if ( $_product->getData('smd_colorswatch_product_list') && Mage_Catalog_Model_Product_Type::TYPE_CONFIGURABLE == $_product->getTypeId() ) : ?>
					<?php $listHelper->showSwatches($_product); ?>
				<?php endif; ?>

                <h3 class="product-title">
					<?php echo $_helper->productAttribute($_product, $_product->getName(), 'name'); ?>
                </h3>
                <?php echo $this->getPriceHtml($_product, true) ?>
                <div class="actions">
                    <?php if($_product->isSaleable()): ?>
                        <button type="button" title="<?php echo $this->__('Add to Cart') ?>" class="button btn-cart" onclick="setLocation('<?php echo $this->getAddToCartUrl($_product) ?>')"><span><span></span></span></button>
                    <?php else: ?>
                        <p class="availability out-of-stock"><span><?php echo $this->__('Out of stock') ?></span></p>
                    <?php endif; ?>                    
                </div>
                </div>
            </li>        
        <?php endforeach ?>
        </ul>        
    <?php endif; ?> 
    <div class="paging_bottom">
        <?php echo $this->getToolbarBlock()->setTemplate('catalog/product/list/toolbar_bottom.phtml')->toHtml(); ?>
    </div>   
	<?php
		if ($this->helper('colorswatch')->hasError()) {
			echo '<p class="error">' . $this->helper('colorswatch')->getError() . '</p>';
		}
	?>
</div>

<script type="text/javascript">


			
$$('.products-list .item').each( function(elementLi, index) {


	productIdExec = /item-([\d]+)/g.exec(elementLi.className);
	productId = productIdExec[1] ? productIdExec[1] : -1;

	<?php if ($productListConfig['use_zoom']) : ?>
	if (productId > 0) {;
		new SMDZoom('image-'+productId, {
			useParentNode: true,
			useRel: true,
			zoomRatio: <?php echo $listHelper->config['zoom_ratio']; ?>,
			errorReport: <?php echo $listHelper->config['show_info_error'] ? 'true' :  'false'; ?>,
			width: <?php echo $listHelper->config['wrapper_width']; ?>,
			height: <?php echo $listHelper->config['wrapper_height']; ?>,
			offsetLeft: <?php echo $listHelper->config['wrapper_offset_left']; ?>,
			offsetTop: <?php echo $listHelper->config['wrapper_offset_top']; ?>,
			onclick: function(zoomClass) { },
			dblclick: function(zoomClass) { },
			insideZoom: <?php echo $listHelper->config['zoom_type'] != 0  ? 'true' :  'false'; ?>,
			insideZoomFull: <?php echo $listHelper->config['zoom_type'] ? 'true' :  'false'; ?>
		});
	}

	<?php endif; ?>

	elementLi.select('ul.colorswatch-attribute li').each( function(swatchElementLi, index) {

		swatchElementLiExec = /colorswatch-([\d]+)-([\d]+)/g.exec(swatchElementLi.className);
		attributeId = swatchElementLiExec[1];
		optionId = swatchElementLiExec[2];

		Event.observe(swatchElementLi, 'click', function() {
			swatchElementLiExec = /colorswatch-([\d]+)-([\d]+)/g.exec(this.className);
			attributeId = swatchElementLiExec[1];
			optionId = swatchElementLiExec[2];

			itemElement = this.up('li.item');
			productIdExec = /item-([\d]+)/g.exec(itemElement.className);
			productId = productIdExec[1] ? productIdExec[1] : -1;

			<?php /* adding pre load element if not exsist */ ?>
			if (typeof(itemElement.preloadElement) == 'undefined') {
				itemElement.preloadElement = document.createElement('DIV');
				Element.setStyle(itemElement, { position:'relative' });
				Element.setStyle(itemElement.preloadElement, { background:'#111', position:'absolute', top: 0, left: 0, opacity:.1, width:'100%', height:'100%' });
				itemElement.loadingIMG = document.createElement('IMG');
				Element.setStyle(itemElement.loadingIMG, { top:'45%', left:'45%', position:'absolute', opacity:1 });
				itemElement.loadingIMG.src = '<?php echo $this->getSkinUrl(); ?>/images/colorswatch/colorswatch_loading.gif';
			}
			itemElement.appendChild(itemElement.preloadElement);
			itemElement.appendChild(itemElement.loadingIMG);

			$('hidden-attribute-'+productId+'-'+attributeId).value = optionId;

			selection = {};
			itemElement.select('.hidden-super-attribute-select').each( function(element, index) {
				attributeIdExec = /hidden-attribute-([\d]+)-([\d]+)/.exec(element.id);
				selection[attributeIdExec[2]] = element.value ? element.value : false ;
			} );

			itemElement.ajaxRequest = new Ajax.Request("<?php echo Mage::getUrl('colorswatchproductlist/get/image') ?>", {
				method:'post',
				parameters:'attribute_id='+attributeId+'&option_id='+optionId+'&product_id='+productId+'&selection='+Object.toJSON(selection),
				onComplete: function(attributeId, optionId, transport) {
					itemElement = this.up('li.item');
					itemElement.ajaxRequest = null;
					itemElement.removeChild(itemElement.loadingIMG);
					itemElement.removeChild(itemElement.preloadElement);
					eval(transport.responseText);
				}.bind(this, attributeId, optionId)
			});

		} );

	} );

});


function validateAttributeSelection(element) {
	element.up('li.item').select('.hidden-super-attribute-select').each( function(element, index) {
		Validation.validate(element);
	} );
	return false; 
}
</script>

<?php endif; ?>
</aside>
